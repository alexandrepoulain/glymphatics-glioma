"""This file contains the functions aand scripts for the mesh figures

"""

import pyvista as pv
import numpy as np

def slices_mesh(reader, path_article, time_step, orientation, origin, png_yes_or_no =False):
    """ This function creates a slice of the data then plot it and save it 
    """
    # Define the colors we want to use
    blue = np.array([200 / 256, 200 / 256, 200 / 256, 1.0])
    black = np.array([11 / 256, 11 / 256, 11 / 256, 1.0])
    grey = np.array([169 / 256, 169 / 266, 189 / 266, 1.0])
    yellow = np.array([30 / 256, 144 / 256, 0 / 255, 1.0])
    red = np.array([1.0, 0.0, 0.0, 1.0])
    orange = np.array([255/256,213/256,128/256,1])

    if orientation == "horizontal":
        normal=[0,0,1]
        indica = "hor" 
    else:
        normal = [0.9662364049700265,0.23938059122944402,-0.09531076672255342]
        indica = "ver"
        
    data = reader.read()
    p = pv.Plotter(window_size=[800,800])
    sargs = dict(height=0.25, vertical=True, position_x=0.05, position_y=0.05)

    # see in the correct direction
    if orientation == "horizontal":
        clipped = data.clip(normal=normal, origin= origin)
        print(clipped.cell_data['subdomains'])
        mapping = np.linspace(clipped.cell_data['subdomains'].min(), clipped.cell_data['subdomains'].max(), 256)
        newcolors = np.empty((256, 4))
        newcolors[mapping <= 6] = yellow
        newcolors[mapping <= 4] = red
        newcolors[mapping <= 3] = orange
        newcolors[mapping <= 2] = blue
        newcolors[mapping <= 1] = grey
        
        from matplotlib.colors import ListedColormap

        # Make the colormap from the listed colors
        my_colormap = ListedColormap(newcolors)

        p.add_mesh(clipped, show_scalar_bar = False,scalar_bar_args=sargs,scalars='subdomains',lighting=False, cmap = my_colormap)
        p.view_xy()
    else:
        normal = -np.array(normal)
        clipped = data.clip(normal=normal, origin= origin, invert = True)
        print(clipped.cell_data['subdomains'])
        mapping = np.linspace(clipped.cell_data['subdomains'].min(), clipped.cell_data['subdomains'].max(), 256)
        newcolors = np.empty((256, 4))
        newcolors[mapping <= 6] = yellow
        newcolors[mapping <= 4] = red
        newcolors[mapping <= 3] = orange
        newcolors[mapping <= 2] = blue
        newcolors[mapping <= 1] = grey
        
        from matplotlib.colors import ListedColormap

        # Make the colormap from the listed colors
        my_colormap = ListedColormap(newcolors)

        p.add_mesh(clipped, show_scalar_bar = False,scalar_bar_args=sargs,scalars='subdomains',lighting=False, cmap = my_colormap)
        p.view_vector(normal)
        
    filename = path_article  + "_mesh_" + str(indica) + ".eps"
    p.save_graphic(filename)
    
    filename = path_article  + "_mesh_" + str(indica) + ".png"
    p.screenshot(filename)


if __name__ == "__main__":
    
    path_article = "../article-glymphatics-tumor/images/"

    vtu_file = "../mesh_fabrication_scripts/tmp/subdomains.xdmf" # use the temporary file generated by the mesh fabrication

    origin = [-30, 31, 20] # tumor center
    
    png_yes_or_no = True # Do you want to save in png

    reader = pv.get_reader(vtu_file)

    slices_mesh(reader, path_article, 0, "horizontal", origin, png_yes_or_no =False)
    slices_mesh(reader, path_article, 0, "vertical", origin, png_yes_or_no =False)
